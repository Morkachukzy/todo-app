{"remainingRequest":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/thread-loader/dist/cjs.js!/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/babel-loader/lib/index.js!/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/src/components/Layout/TheTodoListBase.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/src/components/Layout/TheTodoListBase.vue","mtime":1640770706025},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/babel.config.js","mtime":1640634304538},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":1640634272150},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/thread-loader/dist/cjs.js","mtime":1640634272150},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/babel-loader/lib/index.js","mtime":1640634272894},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":1640634272150},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/vue-loader/lib/index.js","mtime":1640634273134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvY2h1a2EvRG9jdW1lbnRzL1ZTIENPREUgL0Zyb250RW5kIFByb2plY3RzL1RvLURvLUFwcC90b2RvLWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gInZ1ZXgiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgVGhlVG9kb0xpc3Q6IGZ1bmN0aW9uIFRoZVRvZG9MaXN0KCkgewogICAgICByZXR1cm4gaW1wb3J0KCJAL2NvbXBvbmVudHMvTGF5b3V0L1RoZVRvZG9MaXN0LnZ1ZSIpOwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlY3Rpb25zOiBbIkFsbCIsICJBY3RpdmUiLCAiQ29tcGxldGVkIl0sCiAgICAgIGFjdGlvbnM6IFsiY2xlYXJDb21wbGV0ZWQiXSwKICAgICAgdG9kb3M6IFtdLAogICAgICBhY3RpdmVUb2RvczogW10sCiAgICAgIGNvbXBsZXRlZFRvZG9zOiBbXSwKICAgICAgY3VycmVudFNlY3Rpb246ICJBbGwiCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMudG9kb3MgPSB0aGlzLmdldEFsbFRvZG9zOwogIH0sCiAgbWV0aG9kczogewogICAgZGlzcGxheVRvZG9zOiBmdW5jdGlvbiBkaXNwbGF5VG9kb3Moc2VjdGlvbikgewogICAgICBpZiAoc2VjdGlvbiA9PT0gIkFsbCIpIHsKICAgICAgICB0aGlzLnRvZG9zID0gdGhpcy5nZXRBbGxUb2RvczsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnRvZG9zKTsKICAgICAgfSBlbHNlIGlmIChzZWN0aW9uID09PSAiQWN0aXZlIikgewogICAgICAgIHRoaXMudG9kb3MgPSB0aGlzLmdldEFjdGl2ZVRvZG9zOwogICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZ2V0QWN0aXZlVG9kb3MpOwogICAgICB9IGVsc2UgaWYgKHNlY3Rpb24gPT09ICJDb21wbGV0ZWQiKSB7CiAgICAgICAgdGhpcy50b2RvcyA9IHRoaXMuZ2V0Q29tcGxldGVkVG9kb3M7CiAgICAgICAgY29uc29sZS5sb2codGhpcy50b2Rvcyk7CiAgICAgIH0KCiAgICAgIHRoaXMuY3VycmVudFNlY3Rpb24gPSBzZWN0aW9uOwogICAgfSwKICAgIGNsZWFyQ29tcGxldGVkVG9kb3M6IGZ1bmN0aW9uIGNsZWFyQ29tcGxldGVkVG9kb3MoYWN0aW9uKSB7CiAgICAgIGlmIChhY3Rpb24gPT09ICJjbGVhckNvbXBsZXRlZCIpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgicmVtb3ZlQ29tcGxldGVkVG9kb3MiKTsKICAgICAgICB0aGlzLnRvZG9zID0gdGhpcy5nZXRBY3RpdmVUb2RvczsKICAgICAgICB0aGlzLmRpc3BsYXlUb2RvcygiQWxsIik7CiAgICAgIH0KICAgIH0sCiAgICBjaGVja0VudHJ5OiBmdW5jdGlvbiBjaGVja0VudHJ5KGN1cnJlbnRUb2RvKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJtYXJrVG9kb0F0IiwgY3VycmVudFRvZG8pOwogICAgfSwKICAgIGRlbGV0ZVRvZG86IGZ1bmN0aW9uIGRlbGV0ZVRvZG8oY3VycmVudFRvZG8pIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goImRlbGV0ZVRvZG8iLCBjdXJyZW50VG9kbyk7CiAgICB9LAogICAgYWN0aXZlQ1NTOiBmdW5jdGlvbiBhY3RpdmVDU1Moc2VjdGlvbikgewogICAgICByZXR1cm4gewogICAgICAgIGFjdGl2ZTogdGhpcy5jdXJyZW50U2VjdGlvbiA9PT0gc2VjdGlvbgogICAgICB9OwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoewogICAgaXRlbXNMZWZ0OiBmdW5jdGlvbiBpdGVtc0xlZnQoKSB7CiAgICAgIHJldHVybiAiIi5jb25jYXQodGhpcy5nZXRBY3RpdmVUb2Rvc0NvdW50LCAiIGl0ZW1zIGxlZnQiKTsKICAgIH0KICB9LCBtYXBHZXR0ZXJzKFsiZ2V0QWxsVG9kb3MiLCAiZ2V0QWN0aXZlVG9kb3MiLCAiZ2V0QWN0aXZlVG9kb3NDb3VudCIsICJnZXRDb21wbGV0ZWRUb2RvcyJdKSkKfTs="},{"version":3,"sources":["TheTodoListBase.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,WAAA,EAAA;AAAA,aAAA,OAAA,qCAAA,CAAA;AAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,CAAA,KAAA,EAAA,QAAA,EAAA,WAAA,CADA;AAEA,MAAA,OAAA,EAAA,CAAA,gBAAA,CAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,WAAA,EAAA,EAJA;AAKA,MAAA,cAAA,EAAA,EALA;AAMA,MAAA,cAAA,EAAA;AANA,KAAA;AAQA,GAbA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,KAAA,GAAA,KAAA,WAAA;AACA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,OADA,EACA;AACA,UAAA,OAAA,KAAA,KAAA,EAAA;AACA,aAAA,KAAA,GAAA,KAAA,WAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA;AACA,OAHA,MAGA,IAAA,OAAA,KAAA,QAAA,EAAA;AACA,aAAA,KAAA,GAAA,KAAA,cAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,cAAA;AACA,OAHA,MAGA,IAAA,OAAA,KAAA,WAAA,EAAA;AACA,aAAA,KAAA,GAAA,KAAA,iBAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,KAAA;AACA;;AACA,WAAA,cAAA,GAAA,OAAA;AACA,KAbA;AAcA,IAAA,mBAdA,+BAcA,MAdA,EAcA;AACA,UAAA,MAAA,KAAA,gBAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,sBAAA;AACA,aAAA,KAAA,GAAA,KAAA,cAAA;AACA,aAAA,YAAA,CAAA,KAAA;AACA;AACA,KApBA;AAqBA,IAAA,UArBA,sBAqBA,WArBA,EAqBA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,WAAA;AACA,KAvBA;AAwBA,IAAA,UAxBA,sBAwBA,WAxBA,EAwBA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA,WAAA;AACA,KA1BA;AA2BA,IAAA,SA3BA,qBA2BA,OA3BA,EA2BA;AACA,aAAA;AAAA,QAAA,MAAA,EAAA,KAAA,cAAA,KAAA;AAAA,OAAA;AACA;AA7BA,GAjBA;AAgDA,EAAA,QAAA;AACA,IAAA,SADA,uBACA;AACA,uBAAA,KAAA,mBAAA;AACA;AAHA,KAIA,UAAA,CAAA,CACA,aADA,EAEA,gBAFA,EAGA,qBAHA,EAIA,mBAJA,CAAA,CAJA;AAhDA,CAAA","sourcesContent":["<template>\n  <div class=\"todo-list-base\">\n    <the-todo-list\n      :todos=\"todos\"\n      @check-entry=\"checkEntry\"\n      @delete-todo=\"deleteTodo\"\n    ></the-todo-list>\n    <div class=\"navigation\">\n      <div class=\"items-left\">{{ itemsLeft }}</div>\n\n      <base-button\n        v-for=\"action in actions\"\n        :key=\"action\"\n        :action=\"action\"\n        @clear-completed-todos=\"clearCompletedTodos\"\n        class=\"clear-completed-btn\"\n        >Clear Completed</base-button\n      >\n      <div class=\"display-section\">\n        <base-button\n          v-for=\"section in sections\"\n          :key=\"section\"\n          :display=\"section\"\n          @display-todos=\"displayTodos\"\n          :class=\"[activeCSS(section), 'display-section-btn']\"\n          >{{ section }}</base-button\n        >\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  components: {\n    TheTodoList: () => import(\"@/components/Layout/TheTodoList.vue\"),\n  },\n  data() {\n    return {\n      sections: [\"All\", \"Active\", \"Completed\"],\n      actions: [\"clearCompleted\"],\n      todos: [],\n      activeTodos: [],\n      completedTodos: [],\n      currentSection: \"All\",\n    };\n  },\n  mounted() {\n    this.todos = this.getAllTodos;\n  },\n  methods: {\n    displayTodos(section) {\n      if (section === \"All\") {\n        this.todos = this.getAllTodos;\n        console.log(this.todos);\n      } else if (section === \"Active\") {\n        this.todos = this.getActiveTodos;\n        console.log(this.getActiveTodos);\n      } else if (section === \"Completed\") {\n        this.todos = this.getCompletedTodos;\n        console.log(this.todos);\n      }\n      this.currentSection = section;\n    },\n    clearCompletedTodos(action) {\n      if (action === \"clearCompleted\") {\n        this.$store.dispatch(\"removeCompletedTodos\");\n        this.todos = this.getActiveTodos;\n        this.displayTodos(\"All\");\n      }\n    },\n    checkEntry(currentTodo) {\n      this.$store.dispatch(\"markTodoAt\", currentTodo);\n    },\n    deleteTodo(currentTodo) {\n      this.$store.dispatch(\"deleteTodo\", currentTodo);\n    },\n    activeCSS(section) {\n      return { active: this.currentSection === section };\n    },\n  },\n  computed: {\n    itemsLeft() {\n      return `${this.getActiveTodosCount} items left`;\n    },\n    ...mapGetters([\n      \"getAllTodos\",\n      \"getActiveTodos\",\n      \"getActiveTodosCount\",\n      \"getCompletedTodos\",\n    ]),\n  },\n};\n</script>\n\n<style scoped src=\"@/assets/styles/Layout/TheTodoListBase.css\">\n/* @import \"../../assets/styles/Layout/TheTodoListBase.css\"; */\n</style>\n"],"sourceRoot":"src/components/Layout"}]}