{"remainingRequest":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/src/components/Layout/TheTodoList.vue?vue&type=style&index=1&id=8369af80&scoped=true&lang=css&","dependencies":[{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/src/components/Layout/TheTodoList.vue","mtime":1640720699319},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/css-loader/dist/cjs.js","mtime":1640634272638},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1640634273402},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/postcss-loader/src/index.js","mtime":1640634272886},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":1640634272150},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/vue-loader/lib/index.js","mtime":1640634273134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuLi8uLi9hc3NldHMvc3R5bGVzL0xheW91dC9UaGVUb2RvTGlzdEJhc2UuY3NzIjsK"},{"version":3,"sources":["TheTodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA","file":"TheTodoList.vue","sourceRoot":"src/components/Layout","sourcesContent":["<template>\n  <div>\n    <ul>\n      <li\n        v-for=\"(todo, index) in todos\"\n        :key=\"JSON.stringify(todo)\"\n        @mouseover.stop=\"setHoveredTodo(index)\"\n        @mouseleave.stop=\"unsetSetHovered\"\n      >\n        <base-check-box :currentTodo=\"todo\" @check-entry=\"checkEntry\" />\n        <span :class=\"selectedCSS(todo)\"> {{ todo.title }} </span>\n        <template v-if=\"isHoveredTodoActiveAt(index)\">\n          <base-delete-button\n            :currentTodo=\"todo\"\n            :index=\"index\"\n            @delete-todo=\"deleteTodo\"\n          />\n        </template>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"TheTodoList\",\n  props: {\n    todos: {\n      type: Array,\n    },\n  },\n  data() {\n    return {\n      isSelected: false,\n      selectedIndex: null,\n      displayDeleteButton: false,\n      hoveredTodo: null,\n    };\n  },\n  emits: [\"check-entry\", \"delete-todo\"],\n\n  methods: {\n    checkEntry(currentTodo) {\n      this.$emit(\"check-entry\", currentTodo);\n    },\n    selectedCSS(todo) {\n      // if()\n      return { \"cross-out\": !todo.active };\n    },\n    setHoveredTodo(index) {\n      this.hoveredTodo = index;\n      // console.log(\"CAlled\" + this.displayDeleteButton);\n    },\n    isHoveredTodoActiveAt(index) {\n      // console.log(\"CAlled 2\");\n      return this.hoveredTodo === index;\n    },\n    unsetSetHovered() {\n      this.hoveredTodo = null;\n    },\n    deleteTodo(currentTodo) {\n      // console.log(\"delete 3 called\"+ currentTodo);\n      this.$emit(\"delete-todo\", currentTodo)\n    },\n  },\n};\n</script>\n\n<style scoped>\nli {\n  list-style-type: none;\n  padding: 1rem;\n  cursor: pointer;\n  border: 1px solid black;\n}\nli:hover {\n  background-color: purple;\n}\n.cross-out {\n  text-decoration: line-through;\n}\n</style>\n<style scoped>\n@import \"../../assets/styles/Layout/TheTodoListBase.css\";\n</style>"]}]}