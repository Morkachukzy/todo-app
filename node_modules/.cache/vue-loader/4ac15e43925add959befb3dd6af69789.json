{"remainingRequest":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/src/components/Layout/TheTodoListBase.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/src/components/Layout/TheTodoListBase.vue","mtime":1640770706025},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":1640634272150},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/babel-loader/lib/index.js","mtime":1640634272894},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":1640634272150},{"path":"/home/chuka/Documents/VS CODE /FrontEnd Projects/To-Do-App/todo-app/node_modules/vue-loader/lib/index.js","mtime":1640634273134}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBUaGVUb2RvTGlzdDogKCkgPT4gaW1wb3J0KCJAL2NvbXBvbmVudHMvTGF5b3V0L1RoZVRvZG9MaXN0LnZ1ZSIpLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlY3Rpb25zOiBbIkFsbCIsICJBY3RpdmUiLCAiQ29tcGxldGVkIl0sCiAgICAgIGFjdGlvbnM6IFsiY2xlYXJDb21wbGV0ZWQiXSwKICAgICAgdG9kb3M6IFtdLAogICAgICBhY3RpdmVUb2RvczogW10sCiAgICAgIGNvbXBsZXRlZFRvZG9zOiBbXSwKICAgICAgY3VycmVudFNlY3Rpb246ICJBbGwiLAogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLnRvZG9zID0gdGhpcy5nZXRBbGxUb2RvczsKICB9LAogIG1ldGhvZHM6IHsKICAgIGRpc3BsYXlUb2RvcyhzZWN0aW9uKSB7CiAgICAgIGlmIChzZWN0aW9uID09PSAiQWxsIikgewogICAgICAgIHRoaXMudG9kb3MgPSB0aGlzLmdldEFsbFRvZG9zOwogICAgICAgIGNvbnNvbGUubG9nKHRoaXMudG9kb3MpOwogICAgICB9IGVsc2UgaWYgKHNlY3Rpb24gPT09ICJBY3RpdmUiKSB7CiAgICAgICAgdGhpcy50b2RvcyA9IHRoaXMuZ2V0QWN0aXZlVG9kb3M7CiAgICAgICAgY29uc29sZS5sb2codGhpcy5nZXRBY3RpdmVUb2Rvcyk7CiAgICAgIH0gZWxzZSBpZiAoc2VjdGlvbiA9PT0gIkNvbXBsZXRlZCIpIHsKICAgICAgICB0aGlzLnRvZG9zID0gdGhpcy5nZXRDb21wbGV0ZWRUb2RvczsKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnRvZG9zKTsKICAgICAgfQogICAgICB0aGlzLmN1cnJlbnRTZWN0aW9uID0gc2VjdGlvbjsKICAgIH0sCiAgICBjbGVhckNvbXBsZXRlZFRvZG9zKGFjdGlvbikgewogICAgICBpZiAoYWN0aW9uID09PSAiY2xlYXJDb21wbGV0ZWQiKSB7CiAgICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goInJlbW92ZUNvbXBsZXRlZFRvZG9zIik7CiAgICAgICAgdGhpcy50b2RvcyA9IHRoaXMuZ2V0QWN0aXZlVG9kb3M7CiAgICAgICAgdGhpcy5kaXNwbGF5VG9kb3MoIkFsbCIpOwogICAgICB9CiAgICB9LAogICAgY2hlY2tFbnRyeShjdXJyZW50VG9kbykgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgibWFya1RvZG9BdCIsIGN1cnJlbnRUb2RvKTsKICAgIH0sCiAgICBkZWxldGVUb2RvKGN1cnJlbnRUb2RvKSB7CiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJkZWxldGVUb2RvIiwgY3VycmVudFRvZG8pOwogICAgfSwKICAgIGFjdGl2ZUNTUyhzZWN0aW9uKSB7CiAgICAgIHJldHVybiB7IGFjdGl2ZTogdGhpcy5jdXJyZW50U2VjdGlvbiA9PT0gc2VjdGlvbiB9OwogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpdGVtc0xlZnQoKSB7CiAgICAgIHJldHVybiBgJHt0aGlzLmdldEFjdGl2ZVRvZG9zQ291bnR9IGl0ZW1zIGxlZnRgOwogICAgfSwKICAgIC4uLm1hcEdldHRlcnMoWwogICAgICAiZ2V0QWxsVG9kb3MiLAogICAgICAiZ2V0QWN0aXZlVG9kb3MiLAogICAgICAiZ2V0QWN0aXZlVG9kb3NDb3VudCIsCiAgICAgICJnZXRDb21wbGV0ZWRUb2RvcyIsCiAgICBdKSwKICB9LAp9Owo="},{"version":3,"sources":["TheTodoListBase.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TheTodoListBase.vue","sourceRoot":"src/components/Layout","sourcesContent":["<template>\n  <div class=\"todo-list-base\">\n    <the-todo-list\n      :todos=\"todos\"\n      @check-entry=\"checkEntry\"\n      @delete-todo=\"deleteTodo\"\n    ></the-todo-list>\n    <div class=\"navigation\">\n      <div class=\"items-left\">{{ itemsLeft }}</div>\n\n      <base-button\n        v-for=\"action in actions\"\n        :key=\"action\"\n        :action=\"action\"\n        @clear-completed-todos=\"clearCompletedTodos\"\n        class=\"clear-completed-btn\"\n        >Clear Completed</base-button\n      >\n      <div class=\"display-section\">\n        <base-button\n          v-for=\"section in sections\"\n          :key=\"section\"\n          :display=\"section\"\n          @display-todos=\"displayTodos\"\n          :class=\"[activeCSS(section), 'display-section-btn']\"\n          >{{ section }}</base-button\n        >\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  components: {\n    TheTodoList: () => import(\"@/components/Layout/TheTodoList.vue\"),\n  },\n  data() {\n    return {\n      sections: [\"All\", \"Active\", \"Completed\"],\n      actions: [\"clearCompleted\"],\n      todos: [],\n      activeTodos: [],\n      completedTodos: [],\n      currentSection: \"All\",\n    };\n  },\n  mounted() {\n    this.todos = this.getAllTodos;\n  },\n  methods: {\n    displayTodos(section) {\n      if (section === \"All\") {\n        this.todos = this.getAllTodos;\n        console.log(this.todos);\n      } else if (section === \"Active\") {\n        this.todos = this.getActiveTodos;\n        console.log(this.getActiveTodos);\n      } else if (section === \"Completed\") {\n        this.todos = this.getCompletedTodos;\n        console.log(this.todos);\n      }\n      this.currentSection = section;\n    },\n    clearCompletedTodos(action) {\n      if (action === \"clearCompleted\") {\n        this.$store.dispatch(\"removeCompletedTodos\");\n        this.todos = this.getActiveTodos;\n        this.displayTodos(\"All\");\n      }\n    },\n    checkEntry(currentTodo) {\n      this.$store.dispatch(\"markTodoAt\", currentTodo);\n    },\n    deleteTodo(currentTodo) {\n      this.$store.dispatch(\"deleteTodo\", currentTodo);\n    },\n    activeCSS(section) {\n      return { active: this.currentSection === section };\n    },\n  },\n  computed: {\n    itemsLeft() {\n      return `${this.getActiveTodosCount} items left`;\n    },\n    ...mapGetters([\n      \"getAllTodos\",\n      \"getActiveTodos\",\n      \"getActiveTodosCount\",\n      \"getCompletedTodos\",\n    ]),\n  },\n};\n</script>\n\n<style scoped src=\"@/assets/styles/Layout/TheTodoListBase.css\">\n/* @import \"../../assets/styles/Layout/TheTodoListBase.css\"; */\n</style>\n"]}]}